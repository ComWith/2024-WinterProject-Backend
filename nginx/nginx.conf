worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name smini.site;
        charset utf-8;

        # SSL 인증서 발급을 자동화하는 Certbot을 사용하기 위한 설정
        location /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }

        # Http로 들어온 요청을 Https로 Redirect
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name smini.site;
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/smini.site/fullchain.pem;  # ssl 인증서 사용
        ssl_certificate_key /etc/letsencrypt/live/smini.site/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Flask 애플리케이션 리버스 프록시
        location / {
            proxy_pass http://flask:5000;  # Flask 서버가 실행되고 있는 컨테이너를 대상으로 설정
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
        }

        # ignore cache frontend
        location ~* (service-worker\.js)$ {
            add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            expires off;
            proxy_no_cache 1;
        }
    }
}
